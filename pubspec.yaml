name: instachatty
description: A new Flutter application.
version: 1.0.0+1
environment:
  sdk: ">=2.2.2 <3.0.0"
dependencies:
  page_view_indicators: ^1.3.1
  shared_preferences: ^0.5.6
  firebase_core: ^0.5.2
  firebase_auth: ^0.18.3
  cloud_firestore: ^0.14.3
  flutter_svg: ^0.19.0
  image_picker: ^0.6.5
  firebase_storage: ^5.0.1
  progress_dialog: ^1.2.2
  provider: ^4.0.1
  url_launcher: ^5.4.11
#  intl: ^0.16.1
  cached_network_image: ^2.1.0+1
  uuid: ^2.1.0
  video_thumbnail: ^0.2.1
  path_provider: ^1.6.11
  photo_view: ^0.10.3
  video_player: ^1.0.1
  flutter_facebook_login: ^3.0.0
  http: ^0.12.1
  firebase_messaging: ^7.0.3
  audio_recorder: ^1.0.2
  audioplayers: ^0.17.0
  permission_handler: ^5.0.1+1
  intl_phone_number_input: ^0.5.2+2
  pin_code_fields: ^6.0.1
  easy_localization: ^2.3.3

  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  cupertino_icons: ^1.0.0
dependency_overrides:
  intl: 0.17.0-nullsafety.2
dev_dependencies:
  flutter_native_splash:
  flutter_launcher_icons: "^0.8.0"
  flutter_test:
    sdk: flutter
flutter:
  uses-material-design: true
  assets:
    - assets/images/
    - assets/translations/
  fonts:
    - family: Roboto
      fonts:
        - asset: fonts/Roboto.ttf

    - family: sanFran
      fonts:
        - asset: fonts/SF-Pro-Display-Semibold.otf

flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/Whatsapp.png"
  image_path_ios: "assets/images/Whatsapp.png"

flutter_native_splash:

  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#FFFFFF"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file.
  image: assets/images/Whatsapp.png

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#FFFFFF"
  #background_image_dark: "assets/dark-background.png"
  image_dark: assets/images/Whatsapp_dark.png

  # The android and ios parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'